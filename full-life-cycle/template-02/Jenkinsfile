#!groovy

node{
def projectsMap = [:]
projectsMap.put('admin-service', 'jijeesh/java-hello-world-with-maven')
projectsMap.put('alert-service', 'jijeesh/java-hello-world-with-maven')
projectsMap.put('auth-server', 'jijeesh/java-hello-world-with-maven')

def gitBranch = 'master'
  def mvnHome = tool 'maven36'
//  def jdkHome = tool 'jdk8'

  def gitBaseUrl = 'https://github.com/'
  //def server = Artifactory.server "artifactory"
    // Create an Artifactory Maven instance.
  //  def rtMaven = Artifactory.newMavenBuild()
    def buildInfo

    stage('Artifactory configuration') {
      echo 'Artifactory'
    }

// with parallel array methord
// def checkout = [:]
// stage('Checkout and Buid'){
//     projectsMap.each { pName, gitUrl ->
//         println "project name: ${pName} and Git url name ${gitUrl}"
//         gitProjectUrl = gitBaseUrl + gitUrl
//         println "Project url :" + gitProjectUrl
//
//         checkout["${pName}"] = {
//           dir("${pName}"){
//             echo "${pName}"
//                 git branch: gitBranch , url : gitProjectUrl
//                 if (isUnix()) {
//                     sh "pwd"
//                     sh "'${mvnHome}/bin/mvn' clean install"
//                   }else {
//                      bat(/"${mvnHome}\bin\mvn" clean install/)
//                      bat(/start "${pName}" java -jar "target\${pName}-0.0.1-SNAPSHOT.jar" --ACTIVE_PROFILE=intt --SERVICE_RUNNING_HOST_NAME=127.0.0.1 --DISCOVERY_SERVICE_HOST=127.0.0.1 --LOG_PATH=E:\UPS\jenkins_build\LOGS/)
//                   }
//             }
//           }
//         };
// }
//         parallel checkout

// with parallel array methord End
def checkout = [:]
def build = [:]
def run = [:]

//
      projectsMap.each { pName, gitUrl ->
          println "project name: ${pName} and Git url name ${gitUrl}"
          gitProjectUrl = gitBaseUrl + gitUrl
          println "Project url :" + gitProjectUrl
          checkout["${pName}"] = {
            dir("${pName}"){
                  git branch: gitBranch , url : gitProjectUrl
                  }

                }

                build["${pName}"] = {
                  dir("${pName}"){
                        if (isUnix()) {
                            sh "pwd"
                            sh "'${mvnHome}/bin/mvn' clean install"
                          }else {
                             bat(/"${mvnHome}\bin\mvn" clean install/)
                             bat(/start "${pName}" java -jar "target\${pName}-0.0.1-SNAPSHOT.jar" --ACTIVE_PROFILE=intt --SERVICE_RUNNING_HOST_NAME=127.0.0.1 --DISCOVERY_SERVICE_HOST=127.0.0.1 --LOG_PATH=E:\UPS\jenkins_build\LOGS/)
                          }
                        }

                      }

                      run["${pName}"] = {
                        dir("${pName}"){
                              if (isUnix()) {
                                  sh "pwd"
                                   //bat(/start "${pName}" java -jar "target\${pName}-0.0.1-SNAPSHOT.jar" --ACTIVE_PROFILE=intt --SERVICE_RUNNING_HOST_NAME=127.0.0.1 --DISCOVERY_SERVICE_HOST=127.0.0.1 --LOG_PATH=E:\UPS\jenkins_build\LOGS/)
                                //  sh "'${mvnHome}/bin/mvn' clean install"
                                }else {
                                   bat(/"${mvnHome}\bin\mvn" clean install/)
                                   bat(/start "${pName}" java -jar "target\${pName}-0.0.1-SNAPSHOT.jar" --ACTIVE_PROFILE=intt --SERVICE_RUNNING_HOST_NAME=127.0.0.1 --DISCOVERY_SERVICE_HOST=127.0.0.1 --LOG_PATH=E:\UPS\jenkins_build\LOGS/)
                                }
                              }

                            }

          };

  stage('Checkout')
parallel checkout
  stage('Build')
parallel build
stage('Run')
parallel run

//##################


    // projectsMap.each { pName, gitUrl ->
    //     println "project name: ${pName} and Git url name ${gitUrl}"
    //     gitProjectUrl = gitBaseUrl + gitUrl
    //     println "Project url :" + gitProjectUrl
    //     dir("${pName}"){
    //       echo "${pName}"
    //       stage("${pName}_SCM") {
    //         git branch: gitBranch , url : gitProjectUrl
    //         if (isUnix()) {
    //           sh "'${mvnHome}/bin/mvn' clean install"
    //         }else {
    //            bat(/"${mvnHome}\bin\mvn" clean install/)
    //            bat(/start "${pName}" java -jar "target\${pName}-0.0.1-SNAPSHOT.jar" --ACTIVE_PROFILE=intt --SERVICE_RUNNING_HOST_NAME=127.0.0.1 --DISCOVERY_SERVICE_HOST=127.0.0.1 --LOG_PATH=E:\UPS\jenkins_build\LOGS/)
    //         }
    //       }
    //     }
    //     };

          //End of Foreach



            stage("Test") {
                parallel(
                  "Firefox": {
                    echo 'firefox'
                  },
                  "IE": {
                   echo 'IE'
                  },
                  "Chrome": {
                    echo 'Chrome'
                  }
                )
            }



}
